include: "Common.snake"

import glob

LIST_COGPATHS=[path.replace("/SCG.fna","") for path in  glob.glob("binning/*/Bin_*/SCG.fna")]

rule all:
     input: expand("{cogpaths}/profile_done",cogpaths=LIST_COGPATHS)


rule extract_subgraphs:
    input:   cogs="binning/{group}/{path1}/SCG.fna",
             gfa="assembly/high_res/{group}/simplified.gfa"
    output:  touch("binning/{group}/{path1}/done")
    params:  k=ASSEMBLY_K
    threads: THREADS
    shell:   "{SOFT}/subgraph-extractor -part-seq {input.cogs} -graph {input.gfa} -o binning/{wildcards.group}/{wildcards.path1} -k {params} -t {threads} -cds-len-est {SCG_DATA}/coreCogs.tsv >binning/{wildcards.group}/{wildcards.path1}/extract_subgraph.log"

rule create_cog_folders:
    input:   "{path}/done"
    output:  touch("{path}/folder_done")
    shell:   """
    			for file in {wildcards.path}/*.gfa
                do 
                cog=$(basename $file)
                cog=${{cog%.gfa}}
                if [ ! -d {wildcards.path}/$cog ];then
                mkdir {wildcards.path}/$cog
                fi
                if [ ! -f {wildcards.path}/$cog/$cog'.gfa' ];then
    			mv $file {wildcards.path}/$cog/$cog'.gfa'
    			mv {wildcards.path}/$cog'.deadends' {wildcards.path}/$cog/
                mv {wildcards.path}/$cog'.stops' {wildcards.path}/$cog/
    			fi
    			done
                """

rule create_unitig_profile:
	input:  "{path}/folder_done"
	output: touch('{path}/profile_done')
	shell : """
            for file in {wildcards.path}/COG*/*gfa; do
              stub=${{file%.gfa}}
              if [ ! -f ${{stub}}.csv ]; then
                awk '/^S/{{print ">"$2"\\n"$3 }}' $file | grep ">" | sed 's/>//g' > $stub.id    
                awk 'FNR==NR {{hash[$1]; next}} $1 in hash' $stub.id assembly/high_res/group1/simplified.mult_prof | sed 's/\t/,/g' | sed s'/.$//' > ${{stub}}.csv
                rm $stub.id
              fi
            done
            """
