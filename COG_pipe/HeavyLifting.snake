include: "Common.snake"

import glob
import os

BIN_PATHS=[os.path.dirname(path) for path in glob.glob("binning/*/Bin_*/SCG.fna")]

BIN_AVG_COV=dict()
#TODO deal with groups!
for l in open("binning/group1/bin_cov.tsv"):
    bin, cov = l.strip().split()
    BIN_AVG_COV["Bin_" + bin] = cov

rule all:
     input: expand("{bin}/StrainAnalysis/simplif.done", bin=BIN_PATHS)

rule extract_subgraphs:
    input:   cogs="binning/{group}/{bin}/SCG.fna",
             gfa="assembly/high_res/{group}/simplified.gfa"
    output:  touch("binning/{group}/{bin}/StrainAnalysis/subgraph.done"),
    log:     "binning/{group}/{bin}/StrainAnalysis/subgraph.log"
    threads: THREADS
    shell:   "{SOFT}/subgraph-extractor -part-seq {input.cogs} -graph {input.gfa} -o $(dirname {output}) -k {ASSEMBLY_K} -t {threads} -cds-len-est {SCG_DATA}/coreCogs.tsv> {log}"

#TODO remove for cycles
rule create_unitig_profile:
    input: flag="binning/{group}/{bin}/StrainAnalysis/subgraph.done",
           mult_prof="assembly/high_res/{group}/simplified.mult_prof"
    output: touch('binning/{group}/{bin}/StrainAnalysis/profile.done')
    shell:  """
            rm -rf $(dirname {input.flag})/*.tsv
            for file in $(dirname {input.flag})/*gfa; do
                stub=${{file%.gfa}}
                awk '/^S/{{print ">"$2"\\n"$3 }}' $file | grep ">" | sed 's/>//g' > $stub.id    
                awk 'FNR==NR {{hash[$1]; next}} $1 in hash' $stub.id {input.mult_prof} > ${{stub}}.tsv
                rm $stub.id
            done
            """

#FIXME do I need to specify tmp folder
rule simplify_subgraphs:
    input: "{path}/{bin}/StrainAnalysis/profile.done"
    output: touch('{path}/{bin}/StrainAnalysis/simplif.done')
    threads: THREADS
    run:
        #TODO add the cov file within bin folder
        avg_cov = BIN_AVG_COV[wildcards["bin"]]
        shell("""
              out=$(dirname {output})/simplif
              rm -rf $out
              mkdir -p $out/tmp
              in=$(dirname {input})
              for g in $in/*gfa; do
                  name=$(basename $g .gfa)
                  {SOFT}/spades-gsimplifier $g $out/$name --gfa -k {ASSEMBLY_K} -d $in/$name.deadends -p $in/$name.csv -c {avg_cov} -read-length {READ_LENGTH} -t {threads} -tmpdir $out/tmp &> $out/$name.log
              done
              """)
